Day-2
-----

Variables:containers which can hold the values.

int x;            //declaration
x=100;            //initilization

int x=100;

Data types in java
-----------------
1)Premitive data type 

 int, boolean, double,char, float, short

2)Derived data type: it is act as a data type and it is pre difined classes in java

 array, araaylist, String, hashmap etc


Operators in java
------------------

1)Arithmetic Operators---->  + - * / %
2)Relational Operators------>  == < > <= >= !=
3)Logical Operators--------> && || !
4)Increment and Decrement Operators------>  ++ --	 	
5)Assignment Operators------> =

x	y	x&y	x||y	!x	!y
----------------------------------------------
TRUE	TRUE	TRUE	TRUE	FALSE	FALSE
TRUE	FALSE	FALSE	TRUE	FALSE	TRUE
FALSE	TRUE	FALSE	TRUE	TRUE	FALSE
FALSE	FALSE	FALSE	FALSE	TRUE	TRUE


1.Arithmetic Operators
-----------------------
* : Multiplication
/ : Division
% : Modulo
+ : Addition
– : Subtraction

2. Unary Operators
-----------------
– : Unary minus, used for negating the values.
+ : Unary plus indicates the positive value (numbers are positive without this, however).
    It performs an automatic conversion to int when the type of its operand is the byte, 
    char, or short. This is called unary numeric promotion.
++ : Increment operator, used for incrementing the value by 1. There are two varieties of increment operators. 
Post-Increment: Value is first used for computing the result and then incremented.
Pre-Increment: Value is incremented first, and then the result is computed.
— : Decrement operator, used for decrementing the value by 1. There are two varieties of decrement operators. 
Post-decrement: Value is first used for computing the result and then decremented.
Pre-Decrement: Value is decremented first, and then the result is computed.
! : Logical not operator, used for inverting a boolean value.

3. Assignment Operator
---------------------
+=, for adding left operand with right operand and then assigning it to the variable on the left.
-=, for subtracting right operand from left operand and then assigning it to the variable on the left.
*=, for multiplying left operand with right operand and then assigning it to the variable on the left.
/=, for dividing left operand by right operand and then assigning it to the variable on the left.
%=, for assigning modulo of left operand by right operand and then assigning it to the variable on the left.


4. Relational Operators
-----------------------
==, Equal to: returns true if the left-hand side is equal to the right-hand side.
!=, Not Equal to: returns true if the left-hand side is not equal to the right-hand side.
<, less than: returns true if the left-hand side is less than the right-hand side.
<=, less than or equal to returns true if the left-hand side is less than or equal to the right-hand side.
>, Greater than: returns true if the left-hand side is greater than the right-hand side.
>=, Greater than or equal to: returns true if the left-hand side is greater than or equal to the right-hand side.


5. Logical Operators
-----------------------
&&, Logical AND: returns true when both conditions are true.
||, Logical OR: returns true if at least one condition is true.
! , Logical NOT: returns true when condition is false and vice-versa































